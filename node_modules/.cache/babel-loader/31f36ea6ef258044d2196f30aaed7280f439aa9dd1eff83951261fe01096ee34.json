{"ast":null,"code":"var _jsxFileName = \"/Users/koushikhathwar/Desktop/Group1_GhiblisMovie/src/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst registerUrl = 'https://lxfsrxntnf.execute-api.us-east-1.amazonaws.com/prod/register';\nconst Register = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const submitHandler = event => {\n    event.preventDefault();\n    if (username.trim() === '' || email.trim() === '' || name.trim() === '' || password.trim() === '') {\n      setMessage('All fields are required');\n      return;\n    }\n    setMessage(null);\n    const requestBody = {\n      username: username,\n      email: email,\n      name: name,\n      password: password\n    };\n    const requestConfig = {\n      headers: {\n        'x-api-key': 'mzW9uosG9F1ZZ3uXEo9Vn5Yxxc9tTTo08UwzVecx'\n      }\n    };\n    axios.post(registerUrl, requestBody, requestConfig).then(response => {\n      setMessage('Registeration Successful');\n    }).catch(error => {\n      if (error.response.status === 401) {\n        setMessage(error.response.data.message);\n      } else {\n        setMessage('sorry....the backend server is down!! please try again later');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), \"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: event => setName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 98\n      }, this), \"email: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: email,\n        onChange: event => setEmail(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 101\n      }, this), \"username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 110\n      }, this), \"password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 110\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"Vv0mXgSrs9xULoWcTqBeqOy7cnA=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","registerUrl","Register","_s","name","setName","email","setEmail","username","setUsername","password","setPassword","message","setMessage","submitHandler","event","preventDefault","trim","requestBody","requestConfig","headers","post","then","response","catch","error","status","data","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","className","_c","$RefreshReg$"],"sources":["/Users/koushikhathwar/Desktop/Group1_GhiblisMovie/src/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst registerUrl = 'https://lxfsrxntnf.execute-api.us-east-1.amazonaws.com/prod/register';\n\nconst Register = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState(null);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (username.trim() === '' || email.trim() === '' || name.trim() === '' || password.trim() === '') {\n      setMessage('All fields are required');\n      return;\n    }\n    setMessage(null);\n    \n    const requestBody = {\n      username: username,\n      email: email,\n      name: name,\n      password: password\n    }\n\n    const requestConfig = {\n      headers: {\n        'x-api-key': 'mzW9uosG9F1ZZ3uXEo9Vn5Yxxc9tTTo08UwzVecx'\n      }\n    }\n    axios.post(registerUrl, requestBody,requestConfig).then(response => {\n      setMessage('Registeration Successful');\n    }).catch(error => {\n      if (error.response.status === 401) {\n        setMessage(error.response.data.message);\n      } else {\n        setMessage('sorry....the backend server is down!! please try again later');\n      }\n    })\n  }\n\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n        <h5>Register</h5>\n        name: <input type=\"text\" value={name} onChange={event => setName(event.target.value)} /> <br/>\n        email: <input type=\"text\" value={email} onChange={event => setEmail(event.target.value)} /> <br/>\n        username: <input type=\"text\" value={username} onChange={event => setUsername(event.target.value)} /> <br/>\n        password: <input type=\"text\" value={password} onChange={event => setPassword(event.target.value)} /> <br/>\n        <input type=\"submit\" value=\"Register\" />\n      </form>\n      {message && <p className=\"message\">{message}</p>}\n    </div>\n  )\n}\n\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}